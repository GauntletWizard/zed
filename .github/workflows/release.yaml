name: release
on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
jobs:
  create:
    runs-on: "ubuntu-latest"
    outputs:
      upload_url: "${{ steps.release.outputs.upload_url }}"
    steps:
      - uses: "actions/create-release@v1"
        id: "release"
        env:
          GITHUB_TOKEN: "${{ github.token }}"
        with:
          draft: true
          tag_name: "${{ github.ref }}"
          release_name: "${{ github.ref }}"

  build-mac:
    needs: "create"
    runs-on: "macos-latest"
    steps:
      - uses: "actions/checkout@v2"
      - uses: "actions/setup-go@v2"
        with:
          go-version: "^1.17"
      - name: "build"
        run: |
          go build -o darwin-zed ./cmd/zed
          tar -cvf zed.tar.gz ./zed LICENSE README.md
      - uses: "actions/upload-release-asset@v1"
        env:
          GITHUB_TOKEN: "${{ github.token }}"
        with:
          upload_url: "${{ needs.create.outputs.upload_url }}"
          asset_path: "zed.tar.gz"
          asset_name: "zed_${{ github.ref }}_darwin_amd64.tar.gz"
          asset_content_type: "application/octet-stream"

  goreleaser:
    # goreleaser will create the homebrew update, needs the mac build to exist
    needs: "build-mac"
    runs-on: "ubuntu-latest"
    steps:
      - uses: "actions/checkout@v2"
      - name: "Install linux cross-compilers"
        run: |
          sudo apt-get install -y gcc-aarch64-linux-gnu gcc-mingw-w64-x86-64
      - uses: "actions/setup-go@v2"
        with:
          go-version: "^1.17"
      - uses: "goreleaser/goreleaser-action@v2"
        with:
          distribution: "goreleaser"
          version: "latest"
          args: "release --rm-dist"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"